{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let AtencionTelefonicaComponent = class AtencionTelefonicaComponent {\n  constructor(AccountService, Router, datePipe) {\n    this.AccountService = AccountService;\n    this.Router = Router;\n    this.datePipe = datePipe;\n    this.page = 0;\n    this.crearP = false;\n    this.confirmarEliminar = false;\n    this.confirmarModificar = false;\n    this.confirmarReactivacion = false;\n    this.confirmarCrear = false;\n    this.type = 'MEMBER';\n    this.msg = \"\";\n    this.filterType = 'Admin';\n    this.filterHab = \"true\";\n    this.usercreateemail = \"\";\n    this.encontrado = false;\n    this.AccountService.getUserList(\"ALL\").subscribe({\n      next: respuesta => {\n        this.allUsers = respuesta;\n      },\n      error: error => {\n        console.log(error);\n      }\n    });\n  }\n  isAdmin() {\n    return true;\n  }\n  emailExists() {\n    let existe = false;\n    if (this.allUsers == null || this.usercreateemail == \"\" || this.usercreateemail == null) return false;\n    this.allUsers.forEach(element => {\n      if (this.usercreateemail == element.email) {\n        existe = true;\n      }\n    });\n    return existe;\n  }\n  getInfoUser() {\n    if (this._id == null) {\n      this.msg = \"Introduce un id de usuario\";\n      return;\n    }\n    this.AccountService.getUser(this._id).subscribe({\n      next: respuesta => {\n        this.msg = \"\";\n        this.user = respuesta;\n        this.userInfo(this.user);\n      },\n      error: error => {\n        this.msg = \"Error al obtener el usuario, por favor, asegúrese de que el id es correcto\";\n      }\n    });\n  }\n  userInfo(user) {\n    this.id = user.email;\n    this.name = user.name;\n    this.surename = user.surname;\n    this.dni = user.dni;\n    this.birthdate = this.datePipe.transform(user.birthdate, 'yyyy-MM-dd');\n    this.drivingLicense = user.drivingLicense;\n    this.telfNumber = user.telephone;\n    this.type = user.role;\n    this.town = user.city;\n    this.status = !user.deactivated;\n  }\n  menu() {\n    this.Router.navigate(['/inicio']);\n  }\n  delete() {\n    this.confirmarEliminar = true;\n    this.msg = \"Confime la deshabilitación del usuario\";\n  }\n  //funcionalidad del bloqueo de un usuario\n  confirmDelete() {\n    this.confirmarEliminar = false;\n    this.usersList();\n  }\n  updateEmail() {\n    let buf = \"\";\n    if (this.name != null && this.name != \"\") buf += this.name?.toLowerCase().trim().replaceAll(\" \", \"\");\n    if (this.surename != null && this.surename != \"\") {\n      if (this.name != null && this.name != \"\") buf += \".\";\n      buf += this.surename?.toLowerCase().trim().replaceAll(\" \", \"\");\n    }\n    if (buf == \"\") this.usercreateemail = \"\";else this.usercreateemail = buf + \"@iso2023.onmicrosoft.com\";\n  }\n  usersList() {\n    this.AccountService.getUserList(\"ALL\").subscribe({\n      next: respuesta => {\n        console.log(respuesta);\n        this.usersJson = respuesta;\n        for (let i = 0; i < this.usersJson.length; i++) {\n          if (this.usersJson[i][\"email\"] == this.id) {\n            this.AccountService.delUser(this.usersJson[i][\"id\"]);\n            this.status = false;\n            this.msg = \"Usuario deshabilitado\";\n          }\n        }\n      },\n      error: error => {\n        this.msg = \"El usuario no se encuentra registrado\";\n      }\n    });\n  }\n  cancelDelete() {\n    this.confirmarEliminar = false;\n    this.msg = \"\";\n  }\n  isValid() {\n    this.msg = \"\";\n    if (!this.isValidDNI()) {\n      this.msg = \"El dni no es correcto, debe tener 8 digitos y una letra\";\n      return false;\n    }\n    if (this.name == null || this.name == \"\") {\n      this.msg = \"El nombre no puede estar vacío\";\n      return false;\n    }\n    if (this.surename == null || this.surename == \"\") {\n      this.msg = \"El apellido no puede estar vacío\";\n      return false;\n    }\n    if (this.type == \"MEMBER\" && !this.isValidTelf()) {\n      this.msg = \"El teléfono no es correcto, debe tener 9 digitos\";\n      return false;\n    }\n    if (this.crearP) {\n      if (this.emailExists()) {\n        this.msg = \"El correo ya existe\";\n        return false;\n      }\n      if (this.pass == null || this.pass == \"\") {\n        this.msg = \"La contraseña no puede estar vacía\";\n        return false;\n      }\n      if (this.pass != this.confPass) {\n        this.msg = \"Las contraseñas no coinciden\";\n        return false;\n      }\n    }\n    return true;\n  }\n  isValidDNI() {\n    if (!this.AccountService.validateDni(this.dni)) {\n      return false;\n    } else {\n      this.msg = \"\";\n      return true;\n    }\n  }\n  isValidTelf() {\n    if (!this.AccountService.validateTelephone(this.telfNumber)) {\n      return false;\n    } else {\n      this.msg = \"\";\n      return true;\n    }\n  }\n  mod() {\n    this.confirmarModificar = true;\n    this.msg = \"Confime la modificación del usuario\";\n  }\n  confirmMod() {\n    if (this._id == null) {\n      this.msg = \"Introduce un correo\";\n      return;\n    }\n    this.AccountService.mod({\n      dni: this.dni,\n      name: this.name,\n      surname: this.surename,\n      city: this.town,\n      telephone: this.telfNumber,\n      birthdate: this.birthdate,\n      drivingLicense: this.drivingLicense\n    }, this._id);\n    this.confirmarModificar = false;\n    this.msg = \"Modificación realizada\";\n  }\n  cancelMod() {\n    this.confirmarModificar = false;\n    this.msg = \"\";\n  }\n  //funcionalidad de mostrar la info del usuario\n  select(tipo) {\n    if (this.id == null || this.id == \"\") {\n      this.msg = \"Error, Introduzca el correo del usuario\";\n    } else {\n      this.pedirListaUsuarios(\"ALL\"); //en el html le paso \"MEMBER\"\n    }\n  }\n\n  pedirListaUsuarios(tipo) {\n    this.AccountService.getUserList(tipo.toUpperCase()).subscribe({\n      next: respuesta => {\n        console.log(respuesta);\n        this.encontrado = false;\n        this.usersJson = respuesta;\n        for (let i = 0; i < this.usersJson.length; i++) {\n          if (this.usersJson[i][\"email\"] == this.id) {\n            this.encontrado = true;\n            this.page = 1;\n            this._id = this.usersJson[i][\"id\"];\n            this.getInfoUser();\n            this.msg = \"\";\n          }\n        }\n        if (this.encontrado == false) {\n          this.msg = \"El usuario no existe, introduzca un correo válido\";\n        }\n      },\n      error: error => {\n        this.msg = \"Error, el usuario no se encuentra registrado\";\n      }\n    });\n  }\n  cancelSelect() {\n    this.page = 0;\n    this.msg = \"\";\n    this.crearP = false;\n  }\n  reactivate() {\n    this.confirmarReactivacion = true;\n    this.msg = \"Confime la reactivación del usuario\";\n  }\n  //funcionalidad de la reactivación de un usuario\n  confirmReactivation() {\n    this.confirmarReactivacion = false;\n    this.usersList2();\n  }\n  usersList2() {\n    this.AccountService.getUserList(\"ALL\").subscribe({\n      next: respuesta => {\n        console.log(respuesta);\n        this.usersJson = respuesta;\n        for (let i = 0; i < this.usersJson.length; i++) {\n          if (this.usersJson[i][\"email\"] == this.id) {\n            this.AccountService.patchUser(this.usersJson[i][\"id\"]);\n            this.status = true;\n            this.msg = \"Perfil reactivado\";\n          }\n        }\n      },\n      error: error => {\n        console.log(error);\n        this.msg = \"Error, el usuario no se encuentra registrado\";\n      }\n    });\n  }\n  cancelReactivation() {\n    this.confirmarReactivacion = false;\n    this.msg = \"\";\n  }\n  //Selecciona la opción\n  createP() {\n    this.type = \"TELEPHONE_ATTENTION\";\n    this.crearP = true;\n    this.page = 1;\n  }\n  create() {\n    this.confirmarCrear = true;\n    this.msg = \"Confime la creación del usuario\";\n  }\n  confirmCreate() {\n    if (this.type == \"ADMIN\") {\n      this.AccountService.admin({\n        dni: this.dni,\n        name: this.name,\n        surname: this.surename,\n        email: this.usercreateemail,\n        password: this.pass,\n        city: this.town\n      });\n    } else if (this.type == \"MAINTENANCE\") {\n      this.AccountService.encargado({\n        dni: this.dni,\n        name: this.name,\n        surname: this.surename,\n        email: this.usercreateemail,\n        password: this.pass,\n        drivingLicense: this.drivingLicense,\n        city: this.town,\n        experience: this.years\n      });\n    } else if (this.type == \"TELEPHONE_ATTENTION\") {\n      this.AccountService.telephoneAttention({\n        dni: this.dni,\n        name: this.name,\n        surname: this.surename,\n        email: this.usercreateemail,\n        password: this.pass,\n        city: this.town\n      });\n    }\n    this.confirmarCrear = false;\n    this.cancelSelect();\n    //this.select(\"MEMBER\")\n    this.msg = \"Creación realizada\";\n  }\n  cancelCreate() {\n    this.crearP = false;\n    this.confirmarCrear = false;\n    this.msg = \"\";\n  }\n  list() {\n    this.page = 2;\n    this.lstUsers = [];\n    this.AccountService.getUserList(this.type || \"MEMBER\").subscribe({\n      next: respuesta => {\n        let aux = [];\n        respuesta.forEach(element => {\n          if (element.email == null || element.email == \"\") {\n            return;\n          }\n          if (this.filterHab == \"false\" && element.deactivated == true) {\n            aux.push(element);\n          } else if (this.filterHab == \"true\" && element.deactivated == false) {\n            aux.push(element);\n          }\n        });\n        this.lstUsers = aux;\n      },\n      error: error => {\n        console.log(error);\n      }\n    });\n  }\n  selecionarPerf(pos) {\n    this.page = 1;\n    this.msg = \"\";\n    this.lstUsers.forEach(element => {\n      if (element.id == pos) {\n        console.log(element.id);\n        this._id = element.id;\n        this.getInfoUser();\n      }\n    });\n  }\n  search() {\n    //Cuando se ejecute se buscan los vehículos teniendo en cuenta los filtros establecidos\n  }\n};\nAtencionTelefonicaComponent = __decorate([Component({\n  selector: 'app-atencion-telefonica',\n  templateUrl: './atencion-telefonica.component.html',\n  styleUrls: ['./atencion-telefonica.component.css']\n})], AtencionTelefonicaComponent);","map":{"version":3,"names":["Component","AtencionTelefonicaComponent","constructor","AccountService","Router","datePipe","page","crearP","confirmarEliminar","confirmarModificar","confirmarReactivacion","confirmarCrear","type","msg","filterType","filterHab","usercreateemail","encontrado","getUserList","subscribe","next","respuesta","allUsers","error","console","log","isAdmin","emailExists","existe","forEach","element","email","getInfoUser","_id","getUser","user","userInfo","id","name","surename","surname","dni","birthdate","transform","drivingLicense","telfNumber","telephone","role","town","city","status","deactivated","menu","navigate","delete","confirmDelete","usersList","updateEmail","buf","toLowerCase","trim","replaceAll","usersJson","i","length","delUser","cancelDelete","isValid","isValidDNI","isValidTelf","pass","confPass","validateDni","validateTelephone","mod","confirmMod","cancelMod","select","tipo","pedirListaUsuarios","toUpperCase","cancelSelect","reactivate","confirmReactivation","usersList2","patchUser","cancelReactivation","createP","create","confirmCreate","admin","password","encargado","experience","years","telephoneAttention","cancelCreate","list","lstUsers","aux","push","selecionarPerf","pos","search","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Usuario\\Desktop\\gitHub\\MueveTICMantenimientoFRONT\\MueveTIC_fe\\src\\app\\atencion-telefonica\\atencion-telefonica.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-atencion-telefonica',\r\n  templateUrl: './atencion-telefonica.component.html',\r\n  styleUrls: ['./atencion-telefonica.component.css']\r\n})\r\nexport class AtencionTelefonicaComponent {\r\n  page : number = 0\r\n  crearP : boolean = false\r\n  confirmarEliminar : boolean = false\r\n  confirmarModificar : boolean = false\r\n  confirmarReactivacion : boolean = false\r\n  confirmarCrear : boolean = false\r\n  id? : string\r\n  _id? : string\r\n  name? : string\r\n  surename? : string\r\n  dni? : string\r\n  type? : string = 'MEMBER'\r\n  status? : boolean\r\n  pass? : string\r\n  user : any\r\n  confPass? : string\r\n  licence? : string\r\n  town? : string\r\n  drivingLicense? : string\r\n  telfNumber? : number\r\n  years? : number\r\n  birthdate? : string\r\n  msg? : string = \"\"\r\n  filterType? : string = 'Admin'\r\n  filterHab? : string = \"true\"\r\n  usercreateemail : string = \"\"\r\n\r\n  usersJson? : any\r\n  lstUsers? : any\r\n  allUsers? : any\r\n  encontrado? : boolean = false\r\n  valido? : boolean\r\n\r\n\r\n  constructor(public AccountService: AccountService, private Router: Router, private datePipe: DatePipe) {\r\n    this.AccountService.getUserList(\"ALL\").subscribe({\r\n      next: respuesta => {\r\n        this.allUsers = respuesta\r\n      },\r\n      error: error => {\r\n        console.log(error)\r\n      }\r\n    })\r\n  }\r\n\r\n  isAdmin(){\r\n    return true\r\n  }\r\n\r\n  emailExists() {\r\n    let existe: boolean = false;\r\n    if (this.allUsers == null || this.usercreateemail == \"\" || this.usercreateemail == null) return false;\r\n    this.allUsers.forEach((element : any) => {\r\n      if(this.usercreateemail == element.email) {\r\n        existe = true;\r\n      }\r\n    })\r\n    return existe;\r\n  }\r\n\r\n  getInfoUser(){\r\n    if (this._id==null){\r\n      this.msg = \"Introduce un id de usuario\"\r\n      return\r\n    }\r\n    this.AccountService.getUser(this._id)\r\n    .subscribe({\r\n      next: respuesta => {\r\n        this.msg = \"\"\r\n        this.user = respuesta\r\n        this.userInfo(this.user)\r\n      },\r\n      error: error => {\r\n        this.msg = \"Error al obtener el usuario, por favor, asegúrese de que el id es correcto\"\r\n      }\r\n    })\r\n  }\r\n\r\n  userInfo(user : any){\r\n    this.id = user.email;\r\n    this.name = user.name;\r\n    this.surename = user.surname;\r\n    this.dni = user.dni;\r\n    this.birthdate = this.datePipe.transform(user.birthdate, 'yyyy-MM-dd')!;\r\n    this.drivingLicense = user.drivingLicense;\r\n    this.telfNumber = user.telephone;\r\n    this.type = user.role;\r\n    this.town = user.city;\r\n    this.status = !user.deactivated;\r\n  }\r\n\r\n  menu(){\r\n    this.Router.navigate(['/inicio']);\r\n  }\r\n  delete(){\r\n    this.confirmarEliminar=true\r\n    this.msg = \"Confime la deshabilitación del usuario\"\r\n  }\r\n\r\n  //funcionalidad del bloqueo de un usuario\r\n  confirmDelete(){\r\n    this.confirmarEliminar=false\r\n    this.usersList()\r\n  }\r\n\r\n  updateEmail(){\r\n    let buf = \"\"\r\n    if (this.name != null && this.name != \"\")\r\n      buf += this.name?.toLowerCase().trim().replaceAll(\" \", \"\")\r\n    if (this.surename != null && this.surename != \"\") {\r\n      if (this.name != null && this.name != \"\")\r\n        buf += \".\"\r\n      buf += this.surename?.toLowerCase().trim().replaceAll(\" \", \"\")\r\n    }\r\n    if (buf == \"\")\r\n      this.usercreateemail = \"\"\r\n    else\r\n      this.usercreateemail = buf + \"@iso2023.onmicrosoft.com\"\r\n  }\r\n\r\n  usersList(){\r\n    this.AccountService.getUserList(\"ALL\")\r\n    .subscribe({\r\n      next: respuesta => {\r\n        console.log(respuesta)\r\n        this.usersJson = respuesta\r\n        for (let i = 0; i < this.usersJson.length; i++){\r\n          if (this.usersJson[i][\"email\"] == this.id){\r\n            this.AccountService.delUser(this.usersJson[i][\"id\"])\r\n            this.status=false\r\n            this.msg = \"Usuario deshabilitado\"\r\n          }\r\n        }\r\n      },\r\n      error: error => {\r\n        this.msg = \"El usuario no se encuentra registrado\"\r\n      }\r\n    })\r\n\r\n  }\r\n  cancelDelete(){\r\n    this.confirmarEliminar=false\r\n    this.msg = \"\"\r\n  }\r\n\r\n  isValid() {\r\n    this.msg = \"\"\r\n\r\n    if (!this.isValidDNI()) {\r\n      this.msg = \"El dni no es correcto, debe tener 8 digitos y una letra\"\r\n      return false;\r\n    }\r\n\r\n    if (this.name == null || this.name == \"\"){\r\n      this.msg = \"El nombre no puede estar vacío\"\r\n      return false;\r\n    }\r\n\r\n    if (this.surename == null || this.surename == \"\"){\r\n      this.msg = \"El apellido no puede estar vacío\"\r\n      return false;\r\n    }\r\n\r\n    if (this.type == \"MEMBER\" && !this.isValidTelf()){\r\n      this.msg = \"El teléfono no es correcto, debe tener 9 digitos\"\r\n      return false;\r\n    }\r\n\r\n    if (this.crearP) {\r\n      if (this.emailExists()){\r\n        this.msg = \"El correo ya existe\"\r\n        return false;\r\n      }\r\n  \r\n      if (this.pass == null || this.pass == \"\"){\r\n        this.msg = \"La contraseña no puede estar vacía\"\r\n        return false;\r\n      }\r\n  \r\n      if (this.pass != this.confPass){\r\n        this.msg = \"Las contraseñas no coinciden\"\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  isValidDNI(){\r\n\r\n    if (!this.AccountService.validateDni(this.dni)){\r\n      return false\r\n    } else {\r\n      this.msg = \"\"\r\n      return true\r\n    }\r\n  }\r\n\r\n  isValidTelf(){\r\n    if (!this.AccountService.validateTelephone(this.telfNumber)){\r\n      return false\r\n    } else {\r\n      this.msg = \"\"\r\n      return true\r\n    }\r\n  }\r\n\r\n  mod(){\r\n    this.confirmarModificar = true\r\n    this.msg = \"Confime la modificación del usuario\"\r\n  }\r\n\r\n  confirmMod(){\r\n    if (this._id==null){\r\n      this.msg = \"Introduce un correo\"\r\n      return\r\n    }\r\n    this.AccountService.mod({\r\n      dni: this.dni,\r\n      name: this.name,\r\n      surname: this.surename,\r\n      city: this.town,\r\n      telephone: this.telfNumber,\r\n      birthdate: this.birthdate,\r\n      drivingLicense: this.drivingLicense,\r\n    }, this._id)\r\n    this.confirmarModificar=false\r\n    this.msg = \"Modificación realizada\"\r\n  }\r\n\r\n  cancelMod(){\r\n    this.confirmarModificar=false\r\n    this.msg = \"\"\r\n  }\r\n  //funcionalidad de mostrar la info del usuario\r\n  select(tipo: String){\r\n    if(this.id == null || this.id == \"\"){\r\n        this.msg = \"Error, Introduzca el correo del usuario\"\r\n    }else{\r\n\r\n      this.pedirListaUsuarios(\"ALL\")//en el html le paso \"MEMBER\"\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  pedirListaUsuarios(tipo: String){\r\n    this.AccountService.getUserList(tipo.toUpperCase())\r\n      .subscribe({\r\n        next: respuesta => {\r\n          console.log(respuesta)\r\n          this.encontrado = false\r\n          this.usersJson = respuesta\r\n          for (let i = 0; i < this.usersJson.length; i++){\r\n            if (this.usersJson[i][\"email\"] == this.id){\r\n              this.encontrado = true\r\n              this.page = 1\r\n              this._id = this.usersJson[i][\"id\"]\r\n              this.getInfoUser()\r\n              this.msg = \"\"\r\n            }\r\n          } if(this.encontrado == false){\r\n            this.msg = \"El usuario no existe, introduzca un correo válido\"\r\n          }\r\n\r\n        },\r\n        error: error => {\r\n          this.msg = \"Error, el usuario no se encuentra registrado\"\r\n        }\r\n      })\r\n  }\r\n\r\n  cancelSelect(){\r\n    this.page=0\r\n    this.msg = \"\"\r\n    this.crearP = false\r\n  }\r\n\r\n  reactivate(){\r\n    this.confirmarReactivacion=true\r\n    this.msg =\"Confime la reactivación del usuario\"\r\n  }\r\n  //funcionalidad de la reactivación de un usuario\r\n  confirmReactivation(){\r\n    this.confirmarReactivacion=false\r\n    this.usersList2()\r\n\r\n  }\r\n\r\n  usersList2(){\r\n    this.AccountService.getUserList(\"ALL\")\r\n    .subscribe({\r\n      next: respuesta => {\r\n        console.log(respuesta)\r\n        this.usersJson = respuesta\r\n        for (let i = 0; i < this.usersJson.length; i++){\r\n          if (this.usersJson[i][\"email\"] == this.id){\r\n            this.AccountService.patchUser(this.usersJson[i][\"id\"])\r\n            this.status=true\r\n            this.msg = \"Perfil reactivado\"\r\n          }\r\n        }\r\n      },\r\n      error: error => {\r\n        console.log(error)\r\n        this.msg = \"Error, el usuario no se encuentra registrado\"\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  cancelReactivation(){\r\n    this.confirmarReactivacion=false\r\n    this.msg = \"\"\r\n  }\r\n\r\n  //Selecciona la opción\r\n  createP(){\r\n    this.type = \"TELEPHONE_ATTENTION\"\r\n    this.crearP = true\r\n    this.page = 1\r\n  }\r\n\r\n  create(){\r\n    this.confirmarCrear=true\r\n    this.msg = \"Confime la creación del usuario\"\r\n  }\r\n\r\n  confirmCreate(){\r\n    if (this.type == \"ADMIN\"){\r\n      this.AccountService.admin({\r\n        dni: this.dni,\r\n        name: this.name,\r\n        surname: this.surename,\r\n        email: this.usercreateemail,\r\n        password: this.pass,\r\n        city: this.town\r\n      })\r\n    }\r\n    else if (this.type == \"MAINTENANCE\"){\r\n      this.AccountService.encargado({\r\n        dni: this.dni,\r\n        name: this.name,\r\n        surname: this.surename,\r\n        email: this.usercreateemail,\r\n        password: this.pass,\r\n        drivingLicense: this.drivingLicense,\r\n        city: this.town,\r\n        experience: this.years\r\n      })\r\n    }\r\n    else if (this.type == \"TELEPHONE_ATTENTION\"){\r\n      this.AccountService.telephoneAttention({\r\n        dni: this.dni,\r\n        name: this.name,\r\n        surname: this.surename,\r\n        email: this.usercreateemail,\r\n        password: this.pass,\r\n        city: this.town\r\n      })\r\n    }\r\n    this.confirmarCrear=false\r\n    this.cancelSelect()\r\n    //this.select(\"MEMBER\")\r\n    this.msg = \"Creación realizada\"\r\n  }\r\n\r\n  cancelCreate(){\r\n    this.crearP = false\r\n    this.confirmarCrear=false\r\n    this.msg = \"\"\r\n  }\r\n\r\n  list(){\r\n    this.page = 2\r\n    this.lstUsers = []\r\n    this.AccountService.getUserList(this.type || \"MEMBER\").subscribe({\r\n      next: (respuesta: any) => {\r\n        let aux: any[] = []\r\n        respuesta.forEach(\r\n          (element: any) => {\r\n            if (element.email == null || element.email == \"\") {\r\n              return\r\n            }\r\n            if (this.filterHab==\"false\" && element.deactivated==true) {\r\n              aux.push(element)\r\n            }\r\n            else if (this.filterHab==\"true\" && element.deactivated==false) {\r\n              aux.push(element)\r\n            }\r\n          }\r\n        )\r\n        this.lstUsers = aux\r\n      },\r\n      error: error => {\r\n        console.log(error)\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  selecionarPerf(pos : string){\r\n    this.page = 1\r\n    this.msg = \"\"\r\n    this.lstUsers.forEach((element : any) => {\r\n      if(element.id == pos){\r\n        console.log(element.id)\r\n        this._id = element.id\r\n        this.getInfoUser()\r\n      }\r\n    });\r\n  }\r\n\r\n  search(){\r\n    //Cuando se ejecute se buscan los vehículos teniendo en cuenta los filtros establecidos\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}