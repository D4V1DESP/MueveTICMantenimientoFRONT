{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./constants\";\nexport class AccountService {\n  constructor(httpClient, constantsModule) {\n    this.httpClient = httpClient;\n    this.constantsModule = constantsModule;\n    this.user = {};\n    this.auxUser = {};\n    this.eventPipe = new EventEmitter();\n  }\n  login(info) {\n    return this.httpClient.post(this.constantsModule.SERVER_URL + \"/users/login/\", info);\n  }\n  admin(info) {\n    this.httpClient.post(this.constantsModule.SERVER_URL + \"/admins/createAdmin/\", info, {\n      withCredentials: true\n    }).subscribe({\n      next: respuesta => {\n        console.log(respuesta);\n      },\n      error: _ => {}\n    });\n  }\n  encargado(info) {\n    this.httpClient.post(this.constantsModule.SERVER_URL + \"/admins/createMaintenance/\", info, {\n      withCredentials: true\n    }).subscribe({\n      next: respuesta => {\n        console.log(respuesta);\n      },\n      error: _ => {}\n    });\n  }\n  delete() {\n    if (confirm(\"¿Está seguro de que desea eliminar su cuenta?\")) return this.httpClient.delete(this.constantsModule.SERVER_URL + \"/me/\", {\n      withCredentials: true\n    });\n    return null;\n  }\n  mod(info, email) {\n    this.httpClient.patch(this.constantsModule.SERVER_URL + \"/admins/users/\" + email, info, {\n      withCredentials: true\n    }).subscribe({\n      next: respuesta => {\n        console.log(respuesta);\n        this.msg = \"Success\";\n      },\n      error: error => {\n        this.msg = \"Error\";\n      }\n    });\n    return this.msg;\n  }\n  getMe() {\n    return this.httpClient.get(this.constantsModule.SERVER_URL + \"/me/\", {\n      withCredentials: true\n    });\n  }\n  getUser(id) {\n    return this.httpClient.get(this.constantsModule.SERVER_URL + \"/admins/users/\" + id, {\n      withCredentials: true\n    });\n  }\n  getUserList(tipo) {\n    return this.httpClient.get(this.constantsModule.SERVER_URL + \"/admins/users/?type=\" + tipo, {\n      withCredentials: true\n    });\n  }\n  delUser(userId) {\n    this.httpClient.delete(this.constantsModule.SERVER_URL + \"/admins/users/\" + userId, {\n      withCredentials: true\n    }).subscribe({\n      next: respuesta => {\n        console.log(respuesta);\n        this.msg = \"Usuario bloqueado correctamente\";\n      },\n      error: error => {\n        console.log(error);\n        this.msg = \"El usuario no se encuentra registrado\";\n      }\n    });\n    return this.msg;\n  }\n  patchUser(userid) {\n    this.httpClient.patch(this.constantsModule.SERVER_URL + \"/admins/users/reactivate/\" + userid, {}, {\n      withCredentials: true\n    }).subscribe({\n      next: respuesta => {\n        //console.log(respuesta)\n        this.msg = \"El usuario ha sido reactivado correctamente\";\n      },\n      error: error => {\n        this.msg = \"El usuario no se encuentra registrado\";\n      }\n    });\n    return this.msg;\n  }\n  update() {\n    return this.httpClient.patch(this.constantsModule.SERVER_URL + \"/me/\", this.auxUser, {\n      withCredentials: true\n    });\n  }\n  validateTelephone(telephone) {\n    if (telephone == undefined) return false;\n    return telephone > 100000000 && telephone < 999999999;\n  }\n  validateDni(dni) {\n    if (dni == undefined) return false;\n    return new RegExp(\"^[0-9]{8}[A-Za-z]$\").test(dni);\n  }\n  meterConfiguracion(info) {\n    this.httpClient.put(this.constantsModule.SERVER_URL + \"/admins/SystemConfig\", info, {\n      withCredentials: true\n    }).subscribe({\n      next: respuesta => {\n        console.log(respuesta);\n      },\n      error: error => {\n        console.log(error);\n      }\n    });\n  }\n  getConfiguracion() {\n    return this.httpClient.get(this.constantsModule.SERVER_URL + \"/admins/SystemConfig\", {\n      withCredentials: true\n    });\n  }\n  static #_ = this.ɵfac = function AccountService_Factory(t) {\n    return new (t || AccountService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ConstantsModule));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AccountService,\n    factory: AccountService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["EventEmitter","AccountService","constructor","httpClient","constantsModule","user","auxUser","eventPipe","login","info","post","SERVER_URL","admin","withCredentials","subscribe","next","respuesta","console","log","error","_","encargado","delete","confirm","mod","email","patch","msg","getMe","get","getUser","id","getUserList","tipo","delUser","userId","patchUser","userid","update","validateTelephone","telephone","undefined","validateDni","dni","RegExp","test","meterConfiguracion","put","getConfiguracion","i0","ɵɵinject","i1","HttpClient","i2","ConstantsModule","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\dmach\\OneDrive\\Documentos\\GitHub\\MueveTICMantenimientoFRONT\\MueveTIC_fe\\src\\app\\account.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { EventEmitter, Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ConstantsModule } from './constants';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AccountService {\r\n\r\n  event!: Event;\r\n  msg? : string\r\n  vehiculo? : any\r\n  user? : any = {}\r\n  auxUser? : any = {}\r\n  newBirthdate? : Date\r\n\r\n  eventPipe : EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  constructor(private httpClient : HttpClient, private constantsModule: ConstantsModule) {}\r\n\r\n  login(info: any): Observable<any>{\r\n    return this.httpClient.post(this.constantsModule.SERVER_URL + \"/users/login/\", info)\r\n  }\r\n\r\n  admin(info: any) {\r\n    this.httpClient.post(this.constantsModule.SERVER_URL + \"/admins/createAdmin/\", info, {withCredentials: true})\r\n      .subscribe({\r\n        next: respuesta => {\r\n          console.log(respuesta)\r\n        },\r\n        error: _ => {}\r\n      })\r\n  }\r\n\r\n  encargado(info: any) {\r\n    this.httpClient.post(this.constantsModule.SERVER_URL + \"/admins/createMaintenance/\", info, {withCredentials: true})\r\n      .subscribe({\r\n        next: respuesta => {\r\n          console.log(respuesta)\r\n        },\r\n        error: _ => {}\r\n      })\r\n  }\r\n\r\n  delete(){\r\n    if (confirm(\"¿Está seguro de que desea eliminar su cuenta?\"))\r\n      return this.httpClient.delete(this.constantsModule.SERVER_URL + \"/me/\", {withCredentials: true})\r\n    return null\r\n  }\r\n\r\n  mod(info : any, email : string){\r\n    this.httpClient.patch(this.constantsModule.SERVER_URL + \"/admins/users/\"+ email, info, {withCredentials: true})\r\n      .subscribe({\r\n        next: respuesta => {\r\n          console.log(respuesta)\r\n          this.msg = \"Success\"\r\n        },\r\n        error: error => {\r\n          this.msg = \"Error\"\r\n        }\r\n      }\r\n      )\r\n    return this.msg\r\n  }\r\n\r\n  getMe() {\r\n    return this.httpClient.get(this.constantsModule.SERVER_URL + \"/me/\", {withCredentials: true})\r\n  }\r\n\r\n  getUser(id: string) {\r\n    return this.httpClient.get(this.constantsModule.SERVER_URL + \"/admins/users/\" + id, {withCredentials: true})\r\n  }\r\n\r\n  getUserList(tipo: string){\r\n    return this.httpClient.get(this.constantsModule.SERVER_URL + \"/admins/users/?type=\"+ tipo, {withCredentials: true})\r\n  }\r\n\r\n  delUser(userId: string){\r\n    this.httpClient.delete(this.constantsModule.SERVER_URL + \"/admins/users/\" + userId, {withCredentials: true})\r\n    .subscribe({\r\n      next: respuesta => {\r\n        console.log(respuesta)\r\n        this.msg = \"Usuario bloqueado correctamente\"\r\n      },\r\n      error: error => {\r\n        console.log(error)\r\n        this.msg = \"El usuario no se encuentra registrado\"\r\n      }\r\n    })\r\n    return this.msg\r\n  }\r\n\r\n  patchUser(userid: string){\r\n    this.httpClient.patch(this.constantsModule.SERVER_URL + \"/admins/users/reactivate/\" + userid, {}, {withCredentials: true})\r\n    .subscribe({\r\n      next: respuesta => {\r\n        //console.log(respuesta)\r\n        this.msg = \"El usuario ha sido reactivado correctamente\"\r\n      },\r\n      error: error => {\r\n        this.msg = \"El usuario no se encuentra registrado\"\r\n      }\r\n    })\r\n    return this.msg\r\n  }\r\n\r\n  update() {\r\n    return this.httpClient.patch(this.constantsModule.SERVER_URL + \"/me/\", this.auxUser, {withCredentials: true})\r\n  }\r\n\r\n  validateTelephone(telephone?: number) {\r\n    if (telephone == undefined)\r\n      return false\r\n    return telephone > 100000000 && telephone < 999999999\r\n  }\r\n\r\n  validateDni(dni?: string) {\r\n    if (dni == undefined)\r\n      return false\r\n    return new RegExp(\"^[0-9]{8}[A-Za-z]$\").test(dni)\r\n  }\r\n\r\n  meterConfiguracion(info: any) {\r\n    this.httpClient.put(this.constantsModule.SERVER_URL + \"/admins/SystemConfig\", info, {withCredentials: true})\r\n      .subscribe({\r\n        next: respuesta => {\r\n          console.log(respuesta)\r\n        },\r\n        error: error => {\r\n          console.log(error)\r\n        }\r\n      })\r\n  }\r\n\r\n  getConfiguracion() {\r\n    return this.httpClient.get(this.constantsModule.SERVER_URL + \"/admins/SystemConfig\", {withCredentials: true})\r\n  }\r\n\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}